apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postfix.fullname" . }}
  labels:
    {{- include "postfix.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "postfix.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "postfix.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ .Values.smtp | quote | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "postfix.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: TX_SMTP_RELAY_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ template "postfix.fullname" . }}
                key: tx-smtp-relay-host
          - name: TX_SMTP_RELAY_MYHOSTNAME
            valueFrom:
              configMapKeyRef:
                name: {{ template "postfix.fullname" . }}
                key: tx-smtp-relay-myhostname
          - name: TX_SMTP_RELAY_NETWORKS
            valueFrom:
              configMapKeyRef:
                name: {{ template "postfix.fullname" . }}
                key: tx-smtp-relay-networks
          - name: TX_SMTP_RELAY_USERNAME
            valueFrom:
              configMapKeyRef:
                name: {{ template "postfix.fullname" . }}
                key: tx-smtp-relay-username
          {{- if .Values.smtp.relayPassword }}
          - name: TX_SMTP_RELAY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "postfix.fullname" . }}
                key: tx-smtp-relay-password
          {{- end }}
          ports:
            - name: smtp
              containerPort: 25
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 25
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 25
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: queue
              mountPath: /var/spool/postfix
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not .Values.storage.storageClassName }}
      volumes:
        - name: queue
          emptyDir: {}
      {{- end }}
  {{- if .Values.storage.storageClassName }}
  volumeClaimTemplates:
    - metadata:
        name: queue
      spec:
        accessModes:
          - "ReadWriteOnce"
        storageClassName: {{ .Values.storage.storageClassName | quote }}
        resources:
          requests:
            storage: {{ .Values.storage.size }}
  {{- end }}
